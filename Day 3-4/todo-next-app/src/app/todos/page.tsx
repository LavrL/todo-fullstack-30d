'use client'; // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ (CSR)

import { useState } from 'react'; // –•—É–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è
import { v4 as uuidv4 } from 'uuid'; // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID

// –¢–∏–ø –∑–∞–¥–∞—á–∏
type Todo = {
  id: string; // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
  title: string; // –¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏
  completed: boolean; // –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ –∑–∞–¥–∞—á–∞
};

export default function TodoPage() {
  const [todos, setTodos] = useState<Todo[]>([]); // –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
  const [text, setText] = useState(''); // –¢–µ–∫—Å—Ç –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
  const [editId, setEditId] = useState<string | null>(null); // ID —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–π –∑–∞–¥–∞—á–∏
  const [editText, setEditText] = useState(''); // –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
  function addTodo() {
    if (text.trim()) {
      const newTodo: Todo = {
        id: uuidv4(), // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id
        title: text,
        completed: false,
      };
      setTodos([...todos, newTodo]); // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫
      setText(''); // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    }
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
  function deleteTodo(id: string) {
    setTodos(todos.filter((t) => t.id !== id));
  }

  // –ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
  function startEdit(todo: Todo) {
    setEditId(todo.id);
    setEditText(todo.title);
  }

  // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
  function saveEdit(id: string) {
    const updated = todos.map((t) =>
      t.id === id ? { ...t, title: editText } : t
    );
    setTodos(updated);
    setEditId(null);
    setEditText('');
  }

  // –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
  function toggleComplete(id: string) {
    setTodos((prev) =>
      prev.map((t) =>
        t.id === id ? { ...t, completed: !t.completed } : t
      )
    );
  }

  return (
    <div className="p-4 max-w-xl mx-auto">
      <h2 className="text-xl font-semibold mb-4">üìù –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á</h2>

      {/* –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ */}
      <div className="flex gap-2 mb-4">
        <input
          value={text}
          onChange={(e) => setText(e.target.value)}
          className="flex-grow border rounded px-3 py-2"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É"
        />
        <button
          onClick={addTodo}
          className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
        >
          –î–æ–±–∞–≤–∏—Ç—å
        </button>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á */}
      <ul className="space-y-2">
        {todos.map((todo) => (
          <li key={todo.id} className="flex items-center gap-3">
            <input
              type="checkbox"
              checked={todo.completed}
              onChange={() => toggleComplete(todo.id)}
            />
            {editId === todo.id ? (
              <>
                <input
                  value={editText}
                  onChange={(e) => setEditText(e.target.value)}
                  className="border px-2 py-1 rounded flex-grow"
                />
                <button
                  onClick={() => saveEdit(todo.id)}
                  className="text-green-600 hover:underline"
                >
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                </button>
              </>
            ) : (
              <>
                <span
                  className={`flex-grow ${
                    todo.completed ? 'line-through text-gray-500' : ''
                  }`}
                >
                  {todo.title}
                </span>
                <button
                  onClick={() => startEdit(todo)}
                  className="text-blue-500 text-sm hover:underline"
                >
                  –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </button>
                <button
                  onClick={() => deleteTodo(todo.id)}
                  className="text-red-500 text-sm hover:underline"
                >
                  –£–¥–∞–ª–∏—Ç—å
                </button>
              </>
            )}
          </li>
        ))}
      </ul>
    </div>
  );
}
